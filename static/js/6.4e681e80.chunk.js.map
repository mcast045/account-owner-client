{"version":3,"sources":["components/Modals/SuccessfulModal/SuccessfulModal.js","components/Modals/ErrorModal/ErrorModal.js","containers/Owner/DeleteOwner/DeleteOwner.js"],"names":["successModal","props","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","errorModal","closeModal","DeleteOwner","dispatch","useDispatch","data","useSelector","state","repository","showSuccessModal","showErrorModal","errorHandler","errorMessage","owner","useEffect","url","match","params","id","repositoryActions","md","htmlFor","name","format","dateOfBirth","address","mdOffset","type","event","preventDefault","history","push","errorHandlerActions"],"mappings":"gJAAA,kCAsBeA,IAlBM,SAACC,GAClB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAOC,KAAMD,EAAMC,KAAMC,SAAS,UAC9B,kBAAC,IAAMC,OAAP,KACKH,EAAMI,iBAEX,kBAAC,IAAMC,KAAP,KACI,2BAAIL,EAAMM,gBAEd,kBAAC,IAAMC,OAAP,KACI,kBAAC,IAAD,CAAQC,QAAQ,UAAUC,QAAST,EAAMU,cAAeV,EAAMW,mB,iCCflF,kCAsBeC,IAlBI,SAACZ,GAChB,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAOC,KAAMD,EAAMC,KAAMC,SAAS,UAC9B,kBAAC,IAAMC,OAAP,KACKH,EAAMI,iBAEX,kBAAC,IAAMC,KAAP,KACI,2BAAIL,EAAMM,gBAEd,kBAAC,IAAMC,OAAP,KACI,kBAAC,IAAD,CAAQC,QAAQ,SAASC,QAAST,EAAMa,YAAab,EAAMW,mB,+rBC2EhEG,UAhFK,SAACd,GAEjB,IAAMe,EAAWC,cAEXC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWH,QAC7CI,EAAmBH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWC,oBACzDC,EAAiBJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,aAAaD,kBACzDE,EAAeN,aAAY,SAAAC,GAAK,OAAIA,EAAMI,aAAaC,gBAEzDC,EAAK,KAAQR,GAEjBS,qBAAU,WACN,IACMC,EAAM,cADD3B,EAAM4B,MAAMC,OAAOC,GAE9Bf,EAASgB,IAA0BJ,EAA1B,KAAoC3B,OAC9C,IAaH,OACI,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKgC,GAAI,IACL,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKA,GAAI,GACL,kBAAC,IAAD,CAAcC,QAAQ,QAAtB,iBAEJ,kBAAC,IAAD,CAAKD,GAAI,GACL,0BAAME,KAAK,QAAQT,EAAMS,QAGjC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKF,GAAI,GACL,kBAAC,IAAD,CAAcC,QAAQ,eAAtB,mBAEJ,kBAAC,IAAD,CAAKD,GAAI,GACL,0BAAME,KAAK,eAAc,kBAAC,IAAD,CAAQC,OAAO,cAAcV,EAAMW,gBAGpE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKJ,GAAI,GACL,kBAAC,IAAD,CAAcC,QAAQ,WAAtB,aAEJ,kBAAC,IAAD,CAAKD,GAAI,GACL,0BAAME,KAAK,WAAWT,EAAMY,cAMhD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,SAAU,EAAGN,GAAI,GAClB,kBAAC,IAAD,CAAQO,KAAK,SAAS/B,QAAQ,OAAOC,QA7CjC,SAAC+B,GACjBA,EAAMC,iBAEN,IAAMd,EAAM,aAAeV,EAAKa,GAChCf,EAASgB,IAA6BJ,EAA7B,KAAuC3B,OAyCpC,WAEJ,kBAAC,IAAD,CAAKgC,GAAI,GACL,kBAAC,IAAD,CAAQxB,QAAQ,SAASC,QAzCb,WACxBT,EAAM0C,QAAQC,KAAK,iBAwCP,YAGR,kBAAC,IAAD,CAAc1C,KAAMoB,EAAkBjB,gBAAiB,kBACnDE,cAAe,gCACfK,aAAc,KACdD,aAAc,kBAAMK,EAASgB,IAAA,KAAyC/B,GAAS,mBACnF,kBAAC,IAAD,CAAYC,KAAMqB,EAAgBlB,gBAAiB,gBAC/CE,cAAekB,EACfb,aAAc,KACdE,WAAY,kBAAME,EAAS6B","file":"static/js/6.4e681e80.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst successModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default successModal;","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst errorModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default errorModal;","import React, { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as repositoryActions from '../../../Store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../Store/actions/errorHandlerActions';\r\nimport SuccessModal from '../../../components/Modals/SuccessfulModal/SuccessfulModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\r\nimport { Well, Button, Col, Row, ControlLabel } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nconst DeleteOwner = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const data = useSelector(state => state.repository.data);\r\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\r\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\r\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\r\n\r\n    let owner = { ...data };\r\n\r\n    useEffect(() => {\r\n        const id = props.match.params.id;\r\n        const url = '/api/owner/' + id;\r\n        dispatch(repositoryActions.getData(url, { ...props }));\r\n    }, []);\r\n\r\n    const deleteOwner = (event) => {\r\n        event.preventDefault();\r\n\r\n        const url = 'api/owner/' + data.id;\r\n        dispatch(repositoryActions.deleteData(url, { ...props }));\r\n    }\r\n\r\n    const redirectToOwnerList = () => {\r\n        props.history.push('/owner-list');\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Well>\r\n                        <Row>\r\n                            <Col md={3}>\r\n                                <ControlLabel htmlFor='name'>Owners name:</ControlLabel>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <span name='name'>{owner.name}</span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={3}>\r\n                                <ControlLabel htmlFor='dateOfBirth'>Date of birth:</ControlLabel>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <span name='dateOfBirth'><Moment format=\"MM/DD/YYYY\">{owner.dateOfBirth}</Moment></span>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={3}>\r\n                                <ControlLabel htmlFor='address'>Address:</ControlLabel>\r\n                            </Col>\r\n                            <Col md={7}>\r\n                                <span name='address'>{owner.address}</span>\r\n                            </Col>\r\n                        </Row>\r\n                    </Well>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col mdOffset={8} md={1}>\r\n                    <Button type=\"submit\" bsStyle=\"info\" onClick={deleteOwner}>Delete</Button>\r\n                </Col>\r\n                <Col md={1}>\r\n                    <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\r\n                </Col>\r\n            </Row>\r\n            <SuccessModal show={showSuccessModal} modalHeaderText={'Success message'}\r\n                modalBodyText={'Action completed successfylly'}\r\n                okButtonText={'OK'}\r\n                successClick={() => dispatch(repositoryActions.closeSuccessModal({ ...props }, '/owner-List'))} />\r\n            <ErrorModal show={showErrorModal} modalHeaderText={'Error message'}\r\n                modalBodyText={errorMessage}\r\n                okButtonText={'OK'}\r\n                closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default DeleteOwner;"],"sourceRoot":""}