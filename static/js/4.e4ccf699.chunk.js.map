{"version":3,"sources":["components/Modals/SuccessfulModal/SuccessfulModal.js","components/Modals/ErrorModal/ErrorModal.js","UI/Input/Input.js","Utility/FormUtility.js","Utility/InputConfiguration.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","containers/Owner/CreateOwner/CreateOwner.js"],"names":["successModal","props","show","backdrop","Header","modalHeaderText","Body","modalBodyText","Footer","bsStyle","onClick","successClick","okButtonText","errorModal","closeModal","Input","inputField","errorMessage","invalid","shouldValidate","touched","elementType","controlId","id","componentClass","ControlLabel","sm","label","type","value","onChange","changed","onBlur","blur","selected","dateFormat","readOnly","className","showYearDropdown","dropdownMode","convertStateToArrayOfFormObjects","formObject","formElementsArray","key","push","config","executeValidationAndReturnFormElement","event","updatedOwnerForm","formElement","target","validationResponse","validation","validationObject","isValid","required","trim","maxLength","length","checkValidity","valid","countInvalidElements","ownerForm","element","returnInputConfiguration","name","address","dateOfBirth","moment","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","TypeError","CreateOwner","useState","setOwnerForm","isFormValid","setisFormValid","showSuccessModal","useSelector","state","repository","showErrorModal","errorHandler","dispatch","useDispatch","useEffect","formUtilityActions","handleChangeEvent","counter","horizontal","onSubmit","preventDefault","ownerToCreate","repositoryActions","map","mdOffset","md","disabled","history","ErrorModal","errorHandlerActions"],"mappings":"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","file":"static/js/4.e4ccf699.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst successModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default successModal;","import React, { Fragment } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n\r\nconst errorModal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default errorModal;","import React, { Fragment } from 'react';\r\nimport { FormGroup, Col, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './Input.css';\r\n\r\nconst Input = (props) => {\r\n    let inputField = null;\r\n    let errorMessage = null;\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        errorMessage = (<em>{props.errorMessage}</em>);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case 'input':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <FormControl type={props.type} value={props.value} onChange={props.changed} onBlur={props.blur} />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        case 'datePicker':\r\n            inputField = (\r\n                <FormGroup controlId={props.id}>\r\n                    <Col componentClass={ControlLabel} sm={2}>\r\n                        {props.label}\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <DatePicker selected={props.value} dateFormat=\"MM/DD/YYYY\" readOnly\r\n                            onChange={props.changed} className='datePickerControl'\r\n                            showYearDropdown dropdownMode=\"select\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <em>{errorMessage}</em>\r\n                    </Col>\r\n                </FormGroup>\r\n            )\r\n            break;\r\n        default: inputField = null;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {inputField}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Input;","export const convertStateToArrayOfFormObjects = (formObject) => {\r\n    const formElementsArray = [];\r\n    for (let key in formObject) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: formObject[key]\r\n        });\r\n    }\r\n\r\n    return formElementsArray;\r\n}\r\n\r\nconst checkValidity = (value, validation) => {\r\n    let validationObject = {\r\n        isValid: true,\r\n        errorMessage: ''\r\n    };\r\n\r\n    if (validation) {\r\n        if (validation.required) {\r\n            validationObject.isValid = value.trim() !== '';\r\n            validationObject.errorMessage = validationObject.isValid ? '' : 'Field is required';\r\n        }\r\n\r\n        if (validationObject.isValid && validation.maxLength) {\r\n            validationObject.isValid = value.length <= validation.maxLength;\r\n            validationObject.errorMessage =  validationObject.isValid ? '' : `Not allowed more than ${validation.maxLength} characters`;\r\n        }\r\n\r\n        return validationObject;\r\n    }\r\n    else {\r\n        return validationObject;\r\n    }\r\n}\r\n\r\nexport const executeValidationAndReturnFormElement = (event, updatedOwnerForm, id) => {\r\n    let formElement = { ...updatedOwnerForm[id] };\r\n    formElement.value = id === 'dateOfBirth' ? event : event.target.value;\r\n    formElement.touched = true;\r\n\r\n    const validationResponse = checkValidity(formElement.value, formElement.validation);\r\n\r\n    formElement.valid = validationResponse.isValid;\r\n    formElement.errorMessage = validationResponse.errorMessage;\r\n\r\n    return formElement;\r\n}\r\n\r\nexport const countInvalidElements = (ownerForm) => {\r\n    let countInvalidElements = 0;\r\n    for (let element in ownerForm) {\r\n        if (!ownerForm[element].valid) {\r\n            countInvalidElements = countInvalidElements + 1;\r\n            break;\r\n        }\r\n    }\r\n    return countInvalidElements;\r\n}","import moment from 'moment';\r\n\r\nexport const returnInputConfiguration = () => {\r\n    return {\r\n        name: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Name:'\r\n        },\r\n        address: {\r\n            element: 'input', type: 'text', value: '',\r\n            validation: { required: true, maxLength: 60 }, valid: false, touched: false,\r\n            errorMessage: '', label: 'Address:'\r\n        },\r\n        dateOfBirth: {\r\n            element: 'datePicker', type: 'text', value: moment(),\r\n            valid: true, touched: false,\r\n            errorMessage: '', label: 'Date of birth:'\r\n        }\r\n    }\r\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useState, useEffect} from 'react';\r\nimport Input from '../../../UI/Input/Input';\r\nimport {Well, Form, FormGroup, Button, Col} from 'react-bootstrap';\r\nimport * as formUtilityActions from '../../../Utility/FormUtility';\r\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as repositoryActions from '../../../Store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../Store/actions/errorHandlerActions';\r\nimport SuccessModal from '../../../components/Modals/SuccessfulModal/SuccessfulModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/ErrorModal';\r\n\r\nconst CreateOwner = (props) => {\r\n\r\n    const [ownerForm, setOwnerForm] = useState({});\r\n    const [isFormValid, setisFormValid] = useState(false);\r\n\r\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\r\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\r\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        setOwnerForm(returnInputConfiguration());\r\n    }, []);\r\n\r\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects({...ownerForm});\r\n\r\n    const createOwner = (event) => {\r\n        event.preventDefault();\r\n        const ownerToCreate = {\r\n            name: ownerForm.name.value,\r\n            address: ownerForm.address.value,\r\n            dateOfBirth: ownerForm.dateOfBirth.value\r\n        }\r\n\r\n        const url = '/api/owner';\r\n        dispatch(repositoryActions.postData(url, ownerToCreate, {...props}));\r\n    }\r\n\r\n    const handleChangeEvent = (event, id) => {\r\n        const updatedOwnerForm = {...ownerForm};\r\n        updatedOwnerForm[id] = formUtilityActions.executeValidationAndReturnFormElement(event, updatedOwnerForm, id);\r\n        const counter = formUtilityActions.countInvalidElements(updatedOwnerForm);\r\n\r\n        setOwnerForm(updatedOwnerForm);\r\n        setisFormValid(counter === 0);\r\n    }\r\n\r\n    const redirectToOwnerList = () => {\r\n        props.history.push('/owner-list');\r\n    }\r\n\r\n    return ( \r\n        <Well>\r\n            <Form horizontal onSubmit={createOwner}>\r\n                {\r\n                    formElementsArray.map(element => {\r\n                        return <Input key={element.id} \r\n                        elementType={element.config.element}\r\n                        id={element.id} label={element.config.label}\r\n                        type={element.config.type} value={element.config.value}\r\n                        changed={(event) => handleChangeEvent(event, element.id)}\r\n                        errorMessage={element.config.errorMessage}\r\n                        invalid={!element.config.valid} shouldValidate={element.config.validation}\r\n                        touched={element.config.touched}\r\n                        blur={(event) => handleChangeEvent(event, element.id)} />\r\n                    })\r\n                }\r\n                <br />\r\n                <FormGroup>\r\n                    <Col mdOffset={6} md={1}>\r\n                        <Button type='submit' bsStyle='info' disabled={!isFormValid}>Create</Button>\r\n                    </Col>\r\n                    <Col md={1}>\r\n                        <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\r\n                    </Col>\r\n                </FormGroup>\r\n            </Form>\r\n            <SuccessModal show={showSuccessModal}\r\n                modalHeaderText={'Success message'}\r\n                modalBodyText={'Action completed successfully'}\r\n                okButtonText={'OK'}\r\n                successClick={() => dispatch(repositoryActions.closeSuccessModal({ ...props }, '/owner-list'))} />\r\n            <ErrorModal show={showErrorModal}\r\n                modalHeaderText={'Error message'}\r\n                modalBodyText={errorMessage}\r\n                okButtonText={'OK'} closeModal={() => dispatch(errorHandlerActions.closeErrorModal())} />\r\n        </Well>\r\n     );\r\n}\r\n \r\nexport default CreateOwner;"],"sourceRoot":""}