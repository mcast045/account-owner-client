{"version":3,"sources":["components/OwnerComponents/Owner/Owner.js","containers/Owner/OwnerList/OwnerList.js"],"names":["owner","props","name","format","dateOfBirth","address","onClick","id","history","push","bsStyle","OwnerList","dispatch","useDispatch","useEffect","repositoryActions","owners","data","useSelector","state","repository","length","map","Owner","key","mdOffset","md","to","responsive","striped"],"mappings":"6MAiCeA,EApBD,SAACC,GACX,OACI,kBAAC,WAAD,KACI,4BACI,4BAAKA,EAAMD,MAAME,MACjB,4BAAI,kBAAC,IAAD,CAAQC,OAAO,cAAcF,EAAMD,MAAMI,cAC7C,4BAAKH,EAAMD,MAAMK,SACjB,4BACI,kBAAC,IAAD,CAAQC,QAAS,kBAjBLC,EAiBkCN,EAAMD,MAAMO,QAAIN,EAAMO,QAhB5EC,KAAK,iBAAmBF,GADL,IAACA,IAiBZ,YAEJ,4BACI,kBAAC,IAAD,CAAQG,QAAQ,UAAUJ,QAAS,kBAjBxBC,EAiBoDN,EAAMD,MAAMO,QAAIN,EAAMO,QAhB7FC,KAAK,gBAAkBF,GADL,IAACA,IAiBX,WAEJ,4BACI,kBAAC,IAAD,CAAQG,QAAQ,SAASJ,QAAS,kBAjBvBC,EAiBmDN,EAAMD,MAAMO,QAAIN,EAAMO,QAhB5FC,KAAK,gBAAkBF,GADL,IAACA,IAiBX,c,8NCgCLI,UApDG,SAACV,GACf,IAAMW,EAAWC,cAEjBC,qBAAU,WAENF,EAASG,IADC,a,yVACD,IAAoCd,OAC9C,CAACW,EAAUX,IAEd,IAAIe,EAAS,GAEPC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAAWH,QAWnD,OATIA,GAAQA,EAAKI,OAAS,IACtBL,EAASC,EAAKK,KAAI,SAAAtB,GACd,OACI,kBAACuB,EAAD,eAAOC,IAAKxB,EAAMO,GAAIP,MAAOA,GAAWC,QAOhD,kBAAC,WAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKwB,SAAU,GAAIC,GAAI,GACnB,kBAAC,OAAD,CAAMC,GAAG,gBAAT,kBAGR,6BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKD,GAAI,IACL,kBAAC,IAAD,CAAOE,YAAU,EAACC,SAAO,GACrB,+BACI,4BACI,oCACA,6CACA,uCACA,uCACA,sCACA,wCAGR,+BACKb","file":"static/js/7.48f59316.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport Moment from 'react-moment';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst redirectToOwnerDetails = (id, history) => {\r\n    history.push('/ownerDetails/' + id);\r\n}\r\nconst redirectToUpdateOwner = (id, history) => {\r\n    history.push('/updateOwner/' + id);\r\n}\r\nconst redirectToDeleteOwner = (id, history) => {\r\n    history.push('/deleteOwner/' + id);\r\n}\r\nconst owner = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <tr>\r\n                <td>{props.owner.name}</td>\r\n                <td><Moment format=\"DD/MM/YYYY\">{props.owner.dateOfBirth}</Moment></td>\r\n                <td>{props.owner.address}</td>\r\n                <td>\r\n                    <Button onClick={() => redirectToOwnerDetails(props.owner.id, props.history)}>Details</Button>\r\n                </td>\r\n                <td>\r\n                    <Button bsStyle=\"success\" onClick={() => redirectToUpdateOwner(props.owner.id, props.history)}>Update</Button>\r\n                </td>\r\n                <td>\r\n                    <Button bsStyle=\"danger\" onClick={() => redirectToDeleteOwner(props.owner.id, props.history)}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default owner;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Table, Col, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as repositoryActions from '../../../Store/actions/repositoryActions';\r\nimport Owner from '../../../components/OwnerComponents/Owner/Owner';\r\n\r\nconst OwnerList = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let url = '/api/owner';\r\n        dispatch(repositoryActions.getData(url, { ...props }));\r\n    }, [dispatch, props]);\r\n\r\n    let owners = [];\r\n\r\n    const data = useSelector(state => state.repository.data);\r\n\r\n    if (data && data.length > 0) {\r\n        owners = data.map(owner => {\r\n            return (\r\n                <Owner key={owner.id} owner={owner} {...props} />\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col mdOffset={10} md={2}>\r\n                    <Link to='/createOwner' >Create Owner</Link>\r\n                </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n                <Col md={12}>\r\n                    <Table responsive striped>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Date of birth</th>\r\n                                <th>Address</th>\r\n                                <th>Details</th>\r\n                                <th>Update</th>\r\n                                <th>Delete</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {owners}\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OwnerList;"],"sourceRoot":""}