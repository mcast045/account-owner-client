{"version":3,"sources":["Store/actions/actionTypes.js","components/Navaigation/Navigation.js","components/Layout/layout.js","components/Home/Home.js","components/ErrorPages/NotFound/NotFound.js","hoc/asyncComponent/asyncComponent.js","components/ErrorPages/InternalServer/InternalServer.js","components/OwnerComponents/OwnersAccounts/OwnersAccounts.js","containers/Owner/OwnerDetails/OwnerDetails.js","containers/App.js","Store/reducers/repositoryReducer.js","Store/reducers/errorHandlerReducers.js","index.js","Store/actions/errorHandlerActions.js","Axios/axios.js","Store/actions/repositoryActions.js"],"names":["GET_DATA_SUCCESS","POST_DATA_SUCCESS","PUT_DATA_SUCCESS","DELETE_DATA_SUCCESS","HTTP_404_ERROR","HTTP_500_ERROR","HTTP_OTHER_ERROR","CLOSE_ERROR_MODAL","CLOSE_SUCCESS_MODAL","navigation","props","md","inverse","collapseOnSelect","Header","Brand","to","exact","Toggle","Collapse","eventKey","layout","children","home","className","notFound","asyncComponent","importComponent","state","component","then","cmp","setState","default","C","this","Component","InternalServer","OwnersAccounts","accounts","console","log","map","account","key","id","accountType","format","dateCreated","responsive","striped","OwnerDetails","dispatch","useDispatch","useEffect","url","match","params","repositoryActions","owner","useSelector","repository","data","name","dateOfBirth","length","renderTypeOfUserConditionally","AsyncOwnerList","AsyncCreateOwner","AsyncUpdateOwner","AsyncDeleteOwner","App","path","Home","initialState","showSuccessModal","executeGetDataSuccess","action","executePostDataSuccess","executePutDataSuccess","executeDeleteDataSuccess","executeCloseSuccessModal","history","push","reducer","type","actionTypes","showErrorModal","errorMessage","execute404","execute500","executeOtherError","error","response","executeCloseErrorModal","rootReducer","combineReducers","repositoryReducer","errorHandler","errorHandlerReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","handleHTTPError","status","execute404Handler","execute500Handler","executeOtherHandler","closeErrorModal","instance","axios","create","baseURL","headers","headerType","getData","get","catch","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","closeSuccessModal"],"mappings":"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","file":"static/js/main.38ad46f3.chunk.js","sourcesContent":["export const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS';\r\nexport const PUT_DATA_SUCCESS = 'PUT_DATA_SUCCESS';\r\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS';\r\n\r\nexport const HTTP_404_ERROR = 'HTTP_404_ERROR';\r\nexport const HTTP_500_ERROR = 'HTTP_500_ERROR';\r\nexport const HTTP_OTHER_ERROR = 'HTTP_OTHER_ERROR';\r\n\r\nexport const CLOSE_ERROR_MODAL = 'CLOSE_ERROR_MODAL';\r\nexport const CLOSE_SUCCESS_MODAL = 'CLOSE_SUCCESS_MODAL';","import React from 'react';\r\nimport './Navigation.css';\r\nimport { Col, Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst navigation = (props) => {\r\n    return (\r\n        <Col md={12} >\r\n            <Navbar inverse collapseOnSelect>\r\n                <Navbar.Header>\r\n                    <Navbar.Brand>\r\n                        <NavLink to={'/'} exact >Account-Owner</NavLink>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                </Navbar.Header>\r\n                <Navbar.Collapse>\r\n                    <Nav>\r\n                        <LinkContainer to={'/owner-list'} exact>\r\n                            <NavItem eventKey={1}>\r\n                                Owner Actions\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={'/account-list'}>\r\n                            <NavItem eventKey={2}>\r\n                                Account Actions\r\n                            </NavItem>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </Col>\r\n    )\r\n}\r\nexport default navigation;","import React from 'react';\r\nimport { Grid, Row } from 'react-bootstrap';\r\nimport Navigation from '../Navaigation/Navigation.js'\r\n\r\nconst layout = (props) => {\r\n    return (\r\n        <Grid>\r\n            <Row>\r\n                <Navigation/>\r\n            </Row>\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n        </Grid>\r\n    )\r\n}\r\nexport default layout;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './Home.css';\r\n\r\nconst home = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <div className={'homeText'}>\r\n                    \"WELCOME TO ACCOUNT-OWNER APPLICATION\"\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default home;","import React from 'react';\r\nimport './NotFound.css';\r\n\r\nconst notFound = (props) => {\r\n    return ( \r\n        <p className={'notFound'}>\r\n            \"404 Sorry couldn't find it!\"\r\n        </p>\r\n     );\r\n}\r\n \r\nexport default notFound;","import React, {Component} from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        }\r\n        componentDidMount() {\r\n            importComponent()\r\n                .then(cmp => {\r\n                    this.setState({ component: cmp.default });\r\n                });\r\n        }\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\nexport default asyncComponent;","import React from 'react';\r\nimport './InternalServer.css';\r\n\r\nconst InternalServer = (props) => {\r\n    return (\r\n        <p className={'internalServer'}>{\"500 SERVER ERROR, CONTACT ADMINISTRATOR!!!!\"}</p>\r\n    )\r\n}\r\nexport default InternalServer;","import React from 'react';\r\nimport { Row, Col, Table } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\nconst OwnersAccounts = (props) => {\r\n    let accounts = null;\r\n    console.log(props.accounts);\r\n    if (props.accounts) {\r\n        accounts = props.accounts.map(account => {\r\n            return (\r\n                <tr key={account.id}>\r\n                    <td>{account.accountType}</td>\r\n                    <td><Moment format=\"DD/MM/YYYY\">{account.dateCreated}</Moment></td>\r\n                </tr>\r\n            );\r\n        })\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <Table responsive striped>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Account type</th>\r\n                            <th>Date created</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {accounts}\r\n                    </tbody>\r\n                </Table>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default OwnersAccounts;","import React, { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Well, Row, Col } from 'react-bootstrap';\r\nimport * as repositoryActions from '../../../Store/actions/repositoryActions';\r\nimport Moment from 'react-moment';\r\nimport OwnersAccounts from '../../../components/OwnerComponents/OwnersAccounts/OwnersAccounts';\r\n\r\nconst OwnerDetails = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        let id = props.match.params.id;\r\n        let url = '/api/owner/' + id + '/account';\r\n        dispatch(repositoryActions.getData(url, { ...props }));\r\n    }, [dispatch, props]);\r\n\r\n    const owner = useSelector(state => state.repository.data);\r\n\r\n    const renderTypeOfUserConditionally = (owner) => {\r\n        let typeOfUser = null;\r\n        if (owner.accounts && owner.accounts.length <= 2) {\r\n            typeOfUser = (\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Type of user:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <span className={'text-success'}>Beginner user.</span>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        else {\r\n            typeOfUser = (\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Type of user:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <span className={'text-info'}>Advanced user.</span>\r\n                    </Col>\r\n                </Row>\r\n            );\r\n        }\r\n        return typeOfUser;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Well>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Owner name:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        {owner.name}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={3}>\r\n                        <strong>Date of birth:</strong>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Moment format=\"DD/MM/YYYY\">{owner.dateOfBirth}</Moment>\r\n                    </Col>\r\n                </Row>\r\n                {renderTypeOfUserConditionally(owner)}\r\n            </Well>\r\n            <OwnersAccounts accounts={owner.accounts} />\r\n        </Fragment>\r\n    )\r\n}\r\nexport default OwnerDetails;","import React from 'react';\nimport './App.css';\nimport Layout from '../components/Layout/layout';\nimport Home from '../components/Home/Home';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport notFound from '../components/ErrorPages/NotFound/NotFound';\nimport asyncComponent from '../hoc/asyncComponent/asyncComponent';\nimport InternalServer from '../components/ErrorPages/InternalServer/InternalServer';\nimport OwnerDetails from './Owner/OwnerDetails/OwnerDetails';\n\nconst AsyncOwnerList = asyncComponent(() => {\n  return import ('./Owner/OwnerList/OwnerList')\n}) //lazy Loading\nconst AsyncCreateOwner = asyncComponent(() => {\n  return import ('./Owner/CreateOwner/CreateOwner')\n}) //lazy Loading\nconst AsyncUpdateOwner = asyncComponent(() => {\n  return import ('./Owner/UpdateOwner/UpdateOwner')\n}) //lazy Loading\nconst AsyncDeleteOwner = asyncComponent(() => {\n  return import ('./Owner/DeleteOwner/DeleteOwner')\n}) //lazy Loading\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/owner-list\" component={AsyncOwnerList} />\n          <Route path='/ownerDetails/:id' component={OwnerDetails} />\n          <Route path='/createOwner' component={AsyncCreateOwner} />\n          <Route path=\"/updateOwner/:id\" component={AsyncUpdateOwner} />\n          <Route path='/deleteOwner/:id' component={AsyncDeleteOwner} />\n          <Route path='/500' component={InternalServer} />\n          <Route path=\"*\" component={notFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    data: null,\r\n    showSuccessModal: false,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_DATA_SUCCESS:\r\n            return executeGetDataSuccess(state, action);\r\n        case actionTypes.POST_DATA_SUCCESS:\r\n            return executePostDataSuccess(state, action);\r\n        case actionTypes.PUT_DATA_SUCCESS:\r\n            return executePutDataSuccess(state, action);\r\n        case actionTypes.DELETE_DATA_SUCCESS:\r\n            return executeDeleteDataSuccess(state, action);\r\n        case actionTypes.CLOSE_SUCCESS_MODAL:\r\n            return executeCloseSuccessModal(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst executeGetDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        data: action.data,\r\n    }\r\n}\r\n\r\nconst executePostDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true,\r\n    }\r\n}\r\n\r\nconst executePutDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true,\r\n    }\r\n}\r\n\r\nconst executeDeleteDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true,\r\n    }\r\n}\r\n\r\nconst executeCloseSuccessModal = (state, action) => {\r\n    action.props.history.push(action.url);\r\n    return {\r\n        ...state,\r\n        showSuccessModal: false\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    showErrorModal: false,\r\n    errorMessage: ''\r\n}\r\nconst execute404 = (state, action) => {\r\n    action.props.history.push('/404');\r\n    return { ...state };\r\n}\r\nconst execute500 = (state, action) => {\r\n    action.props.history.push('/500');\r\n    return { ...state };\r\n}\r\nconst executeOtherError = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showErrorModal: true,\r\n        errorMessage: action.error.response.data\r\n    };\r\n}\r\n\r\nconst executeCloseErrorModal = (state, action) => {\r\n    return{\r\n        ...state,\r\n        showErrorModal: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.HTTP_404_ERROR:\r\n            return execute404(state, action);\r\n        case actionTypes.HTTP_500_ERROR:\r\n            return execute500(state, action);\r\n        case actionTypes.HTTP_OTHER_ERROR:\r\n            return executeOtherError(state, action);\r\n        case actionTypes.CLOSE_ERROR_MODAL:\r\n            return executeCloseErrorModal(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport repositoryReducer from './Store/reducers/repositoryReducer';\nimport errorHandlerReducer from './Store/reducers/errorHandlerReducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\nconst rootReducer = combineReducers({\n    repository: repositoryReducer,\n    errorHandler: errorHandlerReducer\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));","import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_404_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst execute500Handler = (props) => {\r\n    return {\r\n        type: actionTypes.HTTP_500_ERROR,\r\n        props: props\r\n    }\r\n}\r\n\r\nconst executeOtherHandler = (error) => {\r\n    return {\r\n        type: actionTypes.HTTP_OTHER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const handleHTTPError = (error, props) => {\r\n    if (error.response.status === 404) {\r\n        return execute404Handler(props);\r\n    }\r\n\r\n    else if (error.response.status === 500) {\r\n        return execute500Handler(props);\r\n    }\r\n\r\n    else {\r\n        return executeOtherHandler(error);\r\n    }\r\n}\r\n\r\nexport const closeErrorModal = () => {\r\n    return {\r\n        type: actionTypes.CLOSE_ERROR_MODAL\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://rocky-crag-02316.herokuapp.com',\r\n    headers: {\r\n        headerType: 'example header type'\r\n    }\r\n});\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../Axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerActions';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n}\r\nexport const getData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                dispatch(getDataSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n            })\r\n    }\r\n}\r\n\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.post(url, obj)\r\n            .then(response => {\r\n                dispatch(postDataSuccess(response));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n            })\r\n    }\r\n}\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n            .then(response => {\r\n                dispatch(putDataSuccess(response));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n            })\r\n    }\r\n}\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.DELETE_DATA_SUCCESS,\r\n        response: response\r\n    }\r\n}\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n            .then(response => {\r\n                dispatch(deleteDataSuccess(response));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHTTPError(error, props));\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const closeSuccessModal = (props, url) =>{\r\n    return {\r\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props: props,\r\n        url: url\r\n    }\r\n}"],"sourceRoot":""}